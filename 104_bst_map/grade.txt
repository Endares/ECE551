Grading at 12/07/2024:22:36:47.274227
For commit ID 0303ed05ab4eab039bd237102471da1a84c54c62
Grading at Sat Dec  7 05:36:37 PM EST 2024
-----------------------------------------------
testcase 1 : Testing with BstMap<int,int>
...compiling...
The code compiled.
Valgrind reported errors (test failed).
==265671== Memcheck, a memory error detector
==265671== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==265671== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==265671== Command: ./test.1
==265671== Parent PID: 265670
==265671== 
==265671== Invalid read of size 4
==265671==    at 0x10A7FF: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.1)
==265671==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==265671== 
==265671== 
==265671== Process terminating with default action of signal 11 (SIGSEGV)
==265671==  Access not within mapped region at address 0x4
==265671==    at 0x10A7FF: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.1)
==265671==  If you believe this happened as a result of a stack
==265671==  overflow in your program's main thread (unlikely but
==265671==  possible), you can try to increase the size of the
==265671==  main thread stack using the --main-stacksize= flag.
==265671==  The main thread stack size used in this run was 8388608.
==265671== 
==265671== HEAP SUMMARY:
==265671==     in use at exit: 77,416 bytes in 28 blocks
==265671==   total heap usage: 28 allocs, 0 frees, 77,416 bytes allocated
==265671== 
==265671== LEAK SUMMARY:
==265671==    definitely lost: 0 bytes in 0 blocks
==265671==    indirectly lost: 0 bytes in 0 blocks
==265671==      possibly lost: 0 bytes in 0 blocks
==265671==    still reachable: 77,416 bytes in 28 blocks
==265671==         suppressed: 0 bytes in 0 blocks
==265671== Reachable blocks (those to which a pointer was found) are not shown.
==265671== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==265671== 
==265671== For lists of detected and suppressed errors, rerun with: -s
==265671== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 2 : Testing with BstMap<int,std::string>
...compiling...
The code compiled.
Valgrind reported errors (test failed).
==265732== Memcheck, a memory error detector
==265732== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==265732== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==265732== Command: ./test.2
==265732== Parent PID: 265731
==265732== 
==265732== Invalid read of size 8
==265732==    at 0x49B2148: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==265732==    by 0x10A83B: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.2)
==265732==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==265732== 
==265732== 
==265732== Process terminating with default action of signal 11 (SIGSEGV)
==265732==  Access not within mapped region at address 0x10
==265732==    at 0x49B2148: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==265732==    by 0x10A83B: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.2)
==265732==  If you believe this happened as a result of a stack
==265732==  overflow in your program's main thread (unlikely but
==265732==  possible), you can try to increase the size of the
==265732==  main thread stack using the --main-stacksize= flag.
==265732==  The main thread stack size used in this run was 8388608.
==265732== 
==265732== HEAP SUMMARY:
==265732==     in use at exit: 78,616 bytes in 48 blocks
==265732==   total heap usage: 68 allocs, 20 frees, 79,016 bytes allocated
==265732== 
==265732== LEAK SUMMARY:
==265732==    definitely lost: 0 bytes in 0 blocks
==265732==    indirectly lost: 0 bytes in 0 blocks
==265732==      possibly lost: 0 bytes in 0 blocks
==265732==    still reachable: 78,616 bytes in 48 blocks
==265732==         suppressed: 0 bytes in 0 blocks
==265732== Reachable blocks (those to which a pointer was found) are not shown.
==265732== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==265732== 
==265732== For lists of detected and suppressed errors, rerun with: -s
==265732== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 3 : Testing with BstMap<int,(a custom class we wrote)>
...compiling...
The code compiled.
Valgrind reported errors (test failed).
==265798== Memcheck, a memory error detector
==265798== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==265798== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==265798== Command: ./test.3
==265798== Parent PID: 265797
==265798== 
==265798== Invalid read of size 4
==265798==    at 0x10B80A: Tester::Tester(Tester const&) (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.3)
==265798==    by 0x10A83B: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.3)
==265798==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==265798== 
==265798== 
==265798== Process terminating with default action of signal 11 (SIGSEGV)
==265798==  Access not within mapped region at address 0x8
==265798==    at 0x10B80A: Tester::Tester(Tester const&) (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.3)
==265798==    by 0x10A83B: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.3)
==265798==  If you believe this happened as a result of a stack
==265798==  overflow in your program's main thread (unlikely but
==265798==  possible), you can try to increase the size of the
==265798==  main thread stack using the --main-stacksize= flag.
==265798==  The main thread stack size used in this run was 8388608.
==265798== 
==265798== HEAP SUMMARY:
==265798==     in use at exit: 78,816 bytes in 48 blocks
==265798==   total heap usage: 88 allocs, 40 frees, 79,616 bytes allocated
==265798== 
==265798== LEAK SUMMARY:
==265798==    definitely lost: 0 bytes in 0 blocks
==265798==    indirectly lost: 0 bytes in 0 blocks
==265798==      possibly lost: 0 bytes in 0 blocks
==265798==    still reachable: 78,816 bytes in 48 blocks
==265798==         suppressed: 0 bytes in 0 blocks
==265798== Reachable blocks (those to which a pointer was found) are not shown.
==265798== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==265798== 
==265798== For lists of detected and suppressed errors, rerun with: -s
==265798== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 4 : Testing with BstMap<std::string,int>
...compiling...
The code compiled.
Valgrind reported errors (test failed).
==265864== Memcheck, a memory error detector
==265864== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==265864== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==265864== Command: ./test.4
==265864== Parent PID: 265863
==265864== 
==265864== Invalid read of size 4
==265864==    at 0x10A846: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.4)
==265864==  Address 0x20 is not stack'd, malloc'd or (recently) free'd
==265864== 
==265864== 
==265864== Process terminating with default action of signal 11 (SIGSEGV)
==265864==  Access not within mapped region at address 0x20
==265864==    at 0x10A846: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.4)
==265864==  If you believe this happened as a result of a stack
==265864==  overflow in your program's main thread (unlikely but
==265864==  possible), you can try to increase the size of the
==265864==  main thread stack using the --main-stacksize= flag.
==265864==  The main thread stack size used in this run was 8388608.
==265864== 
==265864== HEAP SUMMARY:
==265864==     in use at exit: 78,216 bytes in 28 blocks
==265864==   total heap usage: 28 allocs, 0 frees, 78,216 bytes allocated
==265864== 
==265864== LEAK SUMMARY:
==265864==    definitely lost: 0 bytes in 0 blocks
==265864==    indirectly lost: 0 bytes in 0 blocks
==265864==      possibly lost: 0 bytes in 0 blocks
==265864==    still reachable: 78,216 bytes in 28 blocks
==265864==         suppressed: 0 bytes in 0 blocks
==265864== Reachable blocks (those to which a pointer was found) are not shown.
==265864== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==265864== 
==265864== For lists of detected and suppressed errors, rerun with: -s
==265864== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 5 : Testing with BstMap<std::string,std::string>
...compiling...
The code compiled.
Valgrind reported errors (test failed).
==265930== Memcheck, a memory error detector
==265930== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==265930== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==265930== Command: ./test.5
==265930== Parent PID: 265929
==265930== 
==265930== Invalid read of size 8
==265930==    at 0x49B2148: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==265930==    by 0x10A85F: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.5)
==265930==  Address 0x28 is not stack'd, malloc'd or (recently) free'd
==265930== 
==265930== 
==265930== Process terminating with default action of signal 11 (SIGSEGV)
==265930==  Access not within mapped region at address 0x28
==265930==    at 0x49B2148: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==265930==    by 0x10A85F: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.5)
==265930==  If you believe this happened as a result of a stack
==265930==  overflow in your program's main thread (unlikely but
==265930==  possible), you can try to increase the size of the
==265930==  main thread stack using the --main-stacksize= flag.
==265930==  The main thread stack size used in this run was 8388608.
==265930== 
==265930== HEAP SUMMARY:
==265930==     in use at exit: 79,216 bytes in 48 blocks
==265930==   total heap usage: 68 allocs, 20 frees, 79,616 bytes allocated
==265930== 
==265930== LEAK SUMMARY:
==265930==    definitely lost: 0 bytes in 0 blocks
==265930==    indirectly lost: 0 bytes in 0 blocks
==265930==      possibly lost: 0 bytes in 0 blocks
==265930==    still reachable: 79,216 bytes in 48 blocks
==265930==         suppressed: 0 bytes in 0 blocks
==265930== Reachable blocks (those to which a pointer was found) are not shown.
==265930== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==265930== 
==265930== For lists of detected and suppressed errors, rerun with: -s
==265930== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 6 : Testing with BstMap<std::string,(a custom class we wrote)>
...compiling...
The code compiled.
Valgrind reported errors (test failed).
==265996== Memcheck, a memory error detector
==265996== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==265996== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==265996== Command: ./test.6
==265996== Parent PID: 265995
==265996== 
==265996== Invalid read of size 4
==265996==    at 0x10B8B6: Tester::Tester(Tester const&) (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.6)
==265996==    by 0x10A85F: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.6)
==265996==  Address 0x20 is not stack'd, malloc'd or (recently) free'd
==265996== 
==265996== 
==265996== Process terminating with default action of signal 11 (SIGSEGV)
==265996==  Access not within mapped region at address 0x20
==265996==    at 0x10B8B6: Tester::Tester(Tester const&) (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.6)
==265996==    by 0x10A85F: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.6)
==265996==  If you believe this happened as a result of a stack
==265996==  overflow in your program's main thread (unlikely but
==265996==  possible), you can try to increase the size of the
==265996==  main thread stack using the --main-stacksize= flag.
==265996==  The main thread stack size used in this run was 8388608.
==265996== 
==265996== HEAP SUMMARY:
==265996==     in use at exit: 79,416 bytes in 48 blocks
==265996==   total heap usage: 88 allocs, 40 frees, 80,216 bytes allocated
==265996== 
==265996== LEAK SUMMARY:
==265996==    definitely lost: 0 bytes in 0 blocks
==265996==    indirectly lost: 0 bytes in 0 blocks
==265996==      possibly lost: 0 bytes in 0 blocks
==265996==    still reachable: 79,416 bytes in 48 blocks
==265996==         suppressed: 0 bytes in 0 blocks
==265996== Reachable blocks (those to which a pointer was found) are not shown.
==265996== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==265996== 
==265996== For lists of detected and suppressed errors, rerun with: -s
==265996== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 7 : Testing with BstMap<(a custom class we wrote),int>
...compiling...
The code compiled.
Valgrind reported errors (test failed).
==266064== Memcheck, a memory error detector
==266064== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==266064== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==266064== Command: ./test.7
==266064== Parent PID: 266063
==266064== 
==266064== Invalid read of size 4
==266064==    at 0x10A826: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.7)
==266064==  Address 0x28 is not stack'd, malloc'd or (recently) free'd
==266064== 
==266064== 
==266064== Process terminating with default action of signal 11 (SIGSEGV)
==266064==  Access not within mapped region at address 0x28
==266064==    at 0x10A826: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.7)
==266064==  If you believe this happened as a result of a stack
==266064==  overflow in your program's main thread (unlikely but
==266064==  possible), you can try to increase the size of the
==266064==  main thread stack using the --main-stacksize= flag.
==266064==  The main thread stack size used in this run was 8388608.
==266064== 
==266064== HEAP SUMMARY:
==266064==     in use at exit: 78,416 bytes in 28 blocks
==266064==   total heap usage: 28 allocs, 0 frees, 78,416 bytes allocated
==266064== 
==266064== LEAK SUMMARY:
==266064==    definitely lost: 0 bytes in 0 blocks
==266064==    indirectly lost: 0 bytes in 0 blocks
==266064==      possibly lost: 0 bytes in 0 blocks
==266064==    still reachable: 78,416 bytes in 28 blocks
==266064==         suppressed: 0 bytes in 0 blocks
==266064== Reachable blocks (those to which a pointer was found) are not shown.
==266064== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==266064== 
==266064== For lists of detected and suppressed errors, rerun with: -s
==266064== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 8 : Testing with BstMap<(a custom class we wrote),std::string>
...compiling...
The code compiled.
Valgrind reported errors (test failed).
==266151== Memcheck, a memory error detector
==266151== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==266151== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==266151== Command: ./test.8
==266151== Parent PID: 266150
==266151== 
==266151== Invalid read of size 8
==266151==    at 0x49B2148: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==266151==    by 0x10A83F: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.8)
==266151==  Address 0x30 is not stack'd, malloc'd or (recently) free'd
==266151== 
==266151== 
==266151== Process terminating with default action of signal 11 (SIGSEGV)
==266151==  Access not within mapped region at address 0x30
==266151==    at 0x49B2148: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==266151==    by 0x10A83F: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.8)
==266151==  If you believe this happened as a result of a stack
==266151==  overflow in your program's main thread (unlikely but
==266151==  possible), you can try to increase the size of the
==266151==  main thread stack using the --main-stacksize= flag.
==266151==  The main thread stack size used in this run was 8388608.
==266151== 
==266151== HEAP SUMMARY:
==266151==     in use at exit: 79,416 bytes in 48 blocks
==266151==   total heap usage: 68 allocs, 20 frees, 79,816 bytes allocated
==266151== 
==266151== LEAK SUMMARY:
==266151==    definitely lost: 0 bytes in 0 blocks
==266151==    indirectly lost: 0 bytes in 0 blocks
==266151==      possibly lost: 0 bytes in 0 blocks
==266151==    still reachable: 79,416 bytes in 48 blocks
==266151==         suppressed: 0 bytes in 0 blocks
==266151== Reachable blocks (those to which a pointer was found) are not shown.
==266151== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==266151== 
==266151== For lists of detected and suppressed errors, rerun with: -s
==266151== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 9 : Testing with BstMap<(a custom class we wrote),(a custom class we wrote)>
...compiling...
The code compiled.
Valgrind reported errors (test failed).
==266241== Memcheck, a memory error detector
==266241== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==266241== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==266241== Command: ./test.9
==266241== Parent PID: 266240
==266241== 
==266241== Invalid read of size 4
==266241==    at 0x10B8A8: Tester::Tester(Tester const&) (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.9)
==266241==    by 0x10A851: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.9)
==266241==  Address 0x28 is not stack'd, malloc'd or (recently) free'd
==266241== 
==266241== 
==266241== Process terminating with default action of signal 11 (SIGSEGV)
==266241==  Access not within mapped region at address 0x28
==266241==    at 0x10B8A8: Tester::Tester(Tester const&) (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.9)
==266241==    by 0x10A851: main (in /home/ece551db/graderbase/work/sz318.104_bst_map.3cHz9Y/test.9)
==266241==  If you believe this happened as a result of a stack
==266241==  overflow in your program's main thread (unlikely but
==266241==  possible), you can try to increase the size of the
==266241==  main thread stack using the --main-stacksize= flag.
==266241==  The main thread stack size used in this run was 8388608.
==266241== 
==266241== HEAP SUMMARY:
==266241==     in use at exit: 79,616 bytes in 48 blocks
==266241==   total heap usage: 88 allocs, 40 frees, 80,416 bytes allocated
==266241== 
==266241== LEAK SUMMARY:
==266241==    definitely lost: 0 bytes in 0 blocks
==266241==    indirectly lost: 0 bytes in 0 blocks
==266241==      possibly lost: 0 bytes in 0 blocks
==266241==    still reachable: 79,616 bytes in 48 blocks
==266241==         suppressed: 0 bytes in 0 blocks
==266241== Reachable blocks (those to which a pointer was found) are not shown.
==266241== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==266241== 
==266241== For lists of detected and suppressed errors, rerun with: -s
==266241== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
